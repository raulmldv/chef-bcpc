###############################################################################
# misc
###############################################################################

# the root of the source tree
root_dir: "{{ inventory_dir | dirname }}"

# username and password used to access bare metal machines
initial_ssh_user: ubuntu
initial_ssh_pass: 53cr37

# validate ssl cert (used by get_url)
validate_certs: true

###############################################################################
# ansible
###############################################################################

ansible_python_interpreter: /usr/bin/env python3
ansible_user: "{{ operator_username }}"
ansible_ssh_common_args: >
  -o StrictHostKeyChecking=no
  -o UserKnownHostsFile=/dev/null

###############################################################################
# additional_runlists
###############################################################################

#additional_runlists:
#  node:
#    - recipe[bcpc::default]
#  bootstrap:
#    - recipe[bcpc::default]

###############################################################################
# cloud
###############################################################################

cloud_ip: 10.65.0.254
cloud_domain: bcpc.example.com
cloud_infrastructure_domain: "{{ cloud_domain }}"
cloud_fqdn: "openstack.{{ cloud_domain }}"
cloud_region: "{{ chef_environment['name'] }}"

cloud_vars: "{{ {} | combine(
                      {
                        'chef': {
                          'environment': chef_environment,
                          'databags': chef_databags,
                          'roles': chef_roles
                        }
                      },
                      {
                        'cloud': {
                          'ip': cloud_ip,
                          'domain': cloud_domain,
                          'fqdn': cloud_fqdn,
                          'region': cloud_region
                        }
                      }
                    )
            }}"

###############################################################################
# cloud images
###############################################################################

cloud_images:
  - file_asset: cirros
    type: qcow2
    license_name: unlicensed

all_cloud_images: "{{ cloud_images + additional_cloud_images | default([]) }}"

###############################################################################
# operator
###############################################################################

# cloud operator (os admin user)
# this is the user that will be added to each node in the cluster and given
# admin privileges
operator_username: operations
operator_group: operators

###############################################################################
# dns servers
###############################################################################

# list of external dns servers
dns:
  servers:
    - 8.8.8.8
    - 8.8.4.4

# default domain search path
dns_search:
  - "{{ cloud_infrastructure_domain }}"

###############################################################################
# etcd configuration
###############################################################################

etcd:
  host_indexes: {}

###############################################################################
# ntp servers
###############################################################################

# list of external ntp servers
ntp:
  servers:
    - time1.google.com
    - time2.google.com

###############################################################################
# local_proxy settings
###############################################################################

# configures a locally running http/https proxy service to handle multiple
# proxy endpoints.

local_proxy:
  enabled: false
  environment:
    http: http://proxy.example.com
    https: http://proxy.example.com
  config:
    listen: 127.0.0.1
    port: 8888
    upstream:
      - otherproxy.example.com ".google.com"
      - proxy.example.com # default proxy

###############################################################################
# chef
###############################################################################

chef_client:
  config: {}

chef_extra_cookbooks:
  - file_asset: logrotate

# all chef extra cookbooks
all_chef_extra_cookbooks: "{{ chef_extra_cookbooks +
                              additional_chef_extra_cookbooks | default([]) }}"

###############################################################################
# web server file assets
###############################################################################

web_server_assets:
  - file_asset: cirros
  - file_asset: etcd
  - file_asset: calicoctl
  - file_asset: consul
  - file_asset: etcd3gw
  - file_asset: ceph-deploy

# all web server file assets
all_web_server_assets: "{{ web_server_assets +
                            additional_web_server_assets | default([]) }}"

###############################################################################
# external files (to be downloaded)
###############################################################################

assets_download_dir: "{{ root_dir }}/assets"

assets_files:
  - name: cirros
    url: https://download.cirros-cloud.net/0.5.2/cirros-0.5.2-x86_64-disk.img
    checksum: sha256:932fcae93574e242dc3d772d5235061747dfe537668443a1f0567d893614b464
    filename: cirros-0.5.2-x86_64-disk.img
    environment: "{{ internet_proxy | default({}) }}"

  - name: etcd
    url: https://github.com/etcd-io/etcd/releases/download/v3.3.10/etcd-v3.3.10-linux-amd64.tar.gz
    checksum: sha256:1620a59150ec0a0124a65540e23891243feb2d9a628092fb1edcc23974724a45
    filename: etcd-v3.3.10-linux-amd64.tar.gz
    environment: "{{ internet_proxy | default({}) }}"

  - name: calicoctl
    url: https://github.com/projectcalico/calico/releases/download/v3.26.0/calicoctl-linux-amd64
    checksum: sha256:19ce069f121f9e245f785a7517521e20fe3294ce1add9d1b2bbcbb0a9b9de24e
    filename: calicoctl
    environment: "{{ internet_proxy | default({}) }}"

  - name: consul
    url: https://releases.hashicorp.com/consul/1.7.2/consul_1.7.2_linux_amd64.zip
    checksum: sha256:5ab689cad175c08a226a5c41d16392bc7dd30ceaaf90788411542a756773e698
    filename: consul_1.7.2_linux_amd64.zip
    environment: "{{ internet_proxy | default({}) }}"

  - name: chef_client
    url: http://downloads.cinc.sh/files/stable/cinc/15.6.10/ubuntu/18.04/cinc_15.6.10-1_amd64.deb
    checksum: sha256:08099c5a971001db92db92b06a81a816bd4f7006d2a261d1cda2c2ec46d8e235
    filename: cinc_15.6.10-1_amd64.deb
    environment: "{{ internet_proxy | default({}) }}"

  - name: chef_server
    url: https://packages.chef.io/files/stable/chef-server/12.17.33/ubuntu/16.04/chef-server-core_12.17.33-1_amd64.deb
    checksum: sha256:2800962092ead67747ed2cd2087b0e254eb5e1a1b169cdc162c384598e4caed5
    filename: chef-server-core_12.17.33-1_amd64.deb
    environment: "{{ internet_proxy | default({}) }}"

  - name: logrotate
    url: https://supermarket.chef.io/cookbooks/logrotate/versions/2.2.0/download
    checksum: sha256:f9385a488ec0ee02bfd680ac5aac012000006e4168f97bbf06b5b28373a1d1aa
    filename: logrotate-2.2.0.tar.gz
    environment: "{{ internet_proxy | default({}) }}"

  - name: etcd3gw
    url: https://files.pythonhosted.org/packages/a4/2e/262c4de0ba23430cd47fa9923904fa8b757806182ca07c5249067f99f424/etcd3gw-1.0.2.tar.gz
    checksum: sha256:8a1482c6993cb3032ea9bee76c78f18d438730f006d772df6bcc8b330fa2740e
    filename: etcd3gw-1.0.2.tar.gz
    environment: "{{ internet_proxy | default({}) }}"

  # ceph-deploy has been deprecated and is unavailable in Jammy
  # We are really due to move off of ceph-deploy, but for now...
  - name: ceph-deploy
    url: http://mirrors.kernel.org/ubuntu/pool/universe/c/ceph-deploy/ceph-deploy_2.0.1-0ubuntu1_all.deb
    checksum: sha256:6ecd4769dbe3d65ff114f458f60840b976cb73873f7e825987613f929ffed911
    filename: ceph-deploy_2.0.1-0ubuntu1_all.deb
    environment: "{{ internet_proxy | default({}) }}"

# all file assets
all_file_assets: "{{ assets_files + additional_assets_files | default([]) }}"

###############################################################################
# virtualbox
###############################################################################

virtualbox:
  nat_ip: 10.0.2.15

###############################################################################
# host aggregates
###############################################################################

host_aggregates: []

###############################################################################
# networking
###############################################################################

networking:
  mtu: 9000

use_primary_transit_interface: true
configure_service_ip: true
configure_network_interfaces: true

networking_networks_primary_aggregate_cidr: []

###############################################################################
# ubuntu apt sources.list
###############################################################################

ubuntu_apt:
  key_url: false
  pools:
    - main
    - restricted
    - universe
    - multiverse
  sources:
    - dist: "{{ ansible_distribution_release }}"
      url: http://archive.ubuntu.com/ubuntu
    - dist: "{{ ansible_distribution_release }}-backports"
      url: http://archive.ubuntu.com/ubuntu
    - dist: "{{ ansible_distribution_release }}-security"
      url: http://security.ubuntu.com/ubuntu
    - dist: "{{ ansible_distribution_release }}-updates"
      url: http://archive.ubuntu.com/ubuntu

###############################################################################
# volume configurations
###############################################################################

volume_configs: {}

###############################################################################
# bird
###############################################################################

bird:
  distribution:
    name: bionic-backports
  when: ansible_distribution_version == "18.04"

###############################################################################
# license traits
###############################################################################

license_trait_keyword: CUSTOM_LICENSE_

license_traits:
  enabled: false
  traits:
    - name: unlicensed
      aggregate: unlicensed
      trait: "{{ license_trait_keyword }}NONE"

###############################################################################
# grub
###############################################################################

grub_cmdline_linux: []

###############################################################################
# system configuration
###############################################################################

# Disable "correctable" MCE (Machine Check Error) and EDAC (Error Detection
# and Correction) reporting. This relinquishes control of the kernel/OS
# processing of correctable/soft error polling and reporting to the platform.
hardware_edac_polling: false

# Select desired I/O scheduler to be applied at startup (deadline, noop, cfq)
hardware_io_scheduler: mq-deadline

# Select kernel NVMe multipath support.
# Disabling addresses the issue with controller vs. disk/device naming issues,
# providing consistent, deterministic device naming conventions.
general_nvme_multipath: false

# Compute node (worknode) specific NVMe multipath support
compute_nvme_multipath: true

# Select whether or not to load newer CPU microcode mitigations at runtime
# when possible (and when it is newer than what the BIOS firmware provides).
hardware_cpu_load_microcode: true

# If pin_version is true, pin to {{ version }}-{{ variant }}
# For example, {{ 5.0.0-32 }}-{{ lowlatency }}
# If pin_version is false, track linux-{{ variant }} upstream
# For example, linux-{{ generic-hwe-18.04 }}
kernel_pin_version: false
kernel_variant: "{{ 'generic' + ('' if ansible_distribution_version == '22.04' else '-hwe-' + ansible_distribution_version + '-edge') }}"
kernel_version: ''

# Use this to *add* more reserved ports; i.e. modify value of
# net.ipv4.ip_local_reserved_ports
system_additional_reserved_ports: []

# Select IPv6 support.
system_enable_ipv6: false

# Any other sysctl parameters that are to be overridden
system_parameters_kernel.pid_max: 4194303
system_parameters_net.nf_conntrack_max: 262144

# Read-ahead value for all block devices, in kb
system_readahead_kb: 512

###############################################################################
# unbound
###############################################################################

unbound_powerdns_enabled: true

###############################################################################
# locales
###############################################################################

locale_categories:
  LANG: "C.UTF-8"
