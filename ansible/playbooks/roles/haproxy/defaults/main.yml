###############################################################################
#  haproxy
###############################################################################

haproxy_creds: "{{ chef_databags | selectattr('id', 'equalto', 'config') | map(attribute='haproxy') | first }}"

# Installation-related configuration options
haproxy_repo_enabled: false
haproxy_repo_public_url: ppa:vbernat/haproxy-2.4
haproxy_repo_key_data: files/haproxy.key
haproxy_dependencies:
  - name: haproxy
    state: latest
haproxy_config_directories:
  - /etc/haproxy/haproxy.d
  - /etc/haproxy/acls

haproxy_config_files:
  - src: haproxy.pem.j2
    dest: /etc/haproxy/haproxy.pem
    mode: '0600'
    notification: restart haproxy
  - src: haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
    mode: '0644'
    notification: reload haproxy
  - src: 429.http.j2
    dest: /etc/haproxy/errors/429.http
    mode: '0644'
    notification: reload haproxy
  - src: qos-exempt.acl.j2
    dest: /etc/haproxy/acls/qos-exempt.acl
    mode: '0644'
    notification: reload haproxy

###############################################################################
# QoS protection-related configuration options
###############################################################################

# Whether QoS is enabled or not.
haproxy_qos_enabled: false

# haproxy QoS config path
haproxy_qos_path: roles/haproxy/templates/haproxy.cfg.qos.j2

# The amount of time to wait for HTTP headers to be sent (timeout http-request)
# and the amount of time to wait for a new HTTP request to appear (timeout
# http-keep-alive).
# NOTE: If `http-keep-alive` is exceeded client TCP connections are closed
# silently.
# NOTE: It is **highly** recommended that `http-keep-alive` not be set to 5s.
# If set to 5s there is the possibility of a race condition when the --wait
# option of the Openstack client is used, which periodically executes API
# requests every 5 seconds, that results in client TCP connections being closed
# unexpectedly.
haproxy_qos_http_request_timeout: 10s

# The maximum number of entries in the stick table
haproxy_qos_max_entries: 1m

# Stick table entry expiration time
haproxy_qos_entry_expiration: 10m

# The period across which the TCP connection rate of clients is measured
haproxy_qos_conn_rate_period: 120s

# The period across which the HTTP request rate of clients is measured
haproxy_qos_http_req_rate_period: 120s

# The period across which the HTTP error response rate of clients is measured
haproxy_qos_http_err_rate_period: 30s

# Maximum number of concurrent connections allowed per client
haproxy_qos_conn_limit: 50

# The number of TCP connections allowed per client within conn_rate_period
haproxy_qos_conn_rate: 1200

# The number of HTTP requests allowed per client within http_req_rate_period
haproxy_qos_http_req_rate: 600

# The number of HTTP requests resulting in a 4xx error allowed per client
# within http_err_rate_period
haproxy_qos_http_err_rate: 30

# A list of CIDRs and/or IPs to exempt from QoS
haproxy_qos_exemptions: []

# SLO link returned in 429 responses
haproxy_qos_slo_url: null

# The value of the Retry-After header specified in 429 responses
haproxy_qos_retry_after: 5
