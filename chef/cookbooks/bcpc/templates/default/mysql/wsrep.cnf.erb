###############################################################################
#                           generated by chef
###############################################################################

# This file contains wsrep-related mysqld options. It should be included
# in the main MySQL configuration file.
#
# Options that need to be customized:
#  - wsrep_provider
#  - wsrep_cluster_address
# The rest of defaults should work out of the box.

##
## mysqld options _MANDATORY_ for correct operation of the cluster
##
[mysqld]

datadir=/var/lib/mysql

# (This must be substituted by wsrep_format)
binlog_format=ROW

# Currently only InnoDB storage engine is supported
default-storage-engine=innodb

# to avoid issues with 'bulk mode inserts' using autoinc
innodb_autoinc_lock_mode=2

# Memory area where InnoDB caches table and index data. Default is 128M.
innodb_buffer_pool_size=<%= node['bcpc']['mysql']['innodb_buffer_pool_size'] %>

# Number of buffer pool instances. Only takes effect if pool size is 1GB+.
innodb_buffer_pool_instances=<%= node['bcpc']['mysql']['innodb_buffer_pool_instances'] %>

thread_cache_size=<%= node['bcpc']['mysql']['thread_cache_size'] %>
innodb_io_capacity=<%= node['bcpc']['mysql']['innodb_io_capacity'] %>

# Less thrash on restarts by dumping and loading buffer pools
innodb_buffer_pool_dump_at_shutdown=ON
innodb_buffer_pool_load_at_startup=ON

# Write to disk and flush once per second
innodb_flush_log_at_trx_commit=0

# Put each table in it's own file
innodb_file_per_table=1

# Set log file larger than the 5M default
innodb_log_file_size=<%= node['bcpc']['mysql']['innodb_log_file_size'] %>

# Set memory buffer size for the log
innodb_log_buffer_size=<%= node['bcpc']['mysql']['innodb_log_buffer_size'] %>

# Use direct I/O to avoid double buffering writes
# note: 'O_DIRECT_NO_FSYNC' should not be used with XFS file system
innodb_flush_method=<%= node['bcpc']['mysql']['innodb_flush_method'] %>

innodb_log_files_in_group=<%= node['bcpc']['mysql']['innodb_log_files_in_group'] %>

innodb_read_io_threads=<%= node['bcpc']['mysql']['innodb_read_io_threads'] %>
innodb_write_io_threads=<%= node['bcpc']['mysql']['innodb_write_io_threads'] %>
innodb_thread_concurrency=<%= node['bcpc']['mysql']['innodb_thread_concurrency'] %>

table_open_cache=<%= node['bcpc']['mysql']['table_open_cache'] %>
table_open_cache_instances=<%= node['bcpc']['mysql']['table_open_cache_instances'] %>

# Override bind-address
# In some systems bind-address defaults to 127.0.0.1, and with mysqldump SST
# it will have (most likely) disastrous consequences on donor node
bind-address=<%= node['service_ip'] %>
max_connections=<%= node['bcpc']['mysql']['max_connections'] %>
port=<%= node['bcpc']['mysql']['port'] %>

# Defaults that most openstack bits are happy with
collation-server = utf8_general_ci
init-connect='SET NAMES utf8'
character-set-server = utf8

# We create lots of temp tables both on disk and in memory.
# Increase size of memory temp tables
max_heap_table_size=<%= node['bcpc']['mysql']['max_heap_table_size'] %>
tmp_table_size=<%= node['bcpc']['mysql']['tmp_table_size'] %>

# We also need to increase some buffer sizes
join_buffer_size=<%= node['bcpc']['mysql']['join_buffer_size'] %>
sort_buffer_size=<%= node['bcpc']['mysql']['sort_buffer_size'] %>

##
## Slow query log options
##
slow_query_log=<%= node['bcpc']['mysql']['slow_query_log'] ? '1' : '0' %>
slow_query_log_file=<%= node['bcpc']['mysql']['slow_query_log_file'] %>
long_query_time=<%= node['bcpc']['mysql']['long_query_time'] %>
log_queries_not_using_indexes=<%= node['bcpc']['mysql']['log_queries_not_using_indexes'] ? '1' : '0' %>

##
## WSREP options
##

<% gcomm = @headnodes.collect{|h| h['service_ip'] + ':4567'}.join(',') %>
wsrep_cluster_address=gcomm://<%= gcomm %>

# Full path to wsrep provider library or 'none'
wsrep_provider=/usr/lib/galera4/libgalera_smm.so

# Provider specific configuration options
wsrep_provider_options="gmcast.listen_addr=tcp://<%= node['service_ip'] %>:4567"

# Logical cluster name. Should be the same for all nodes.
wsrep_cluster_name="<%= node['bcpc']['cloud']['region'] %>"

# Human-readable node name (non-unique). Hostname by default.
#wsrep_node_name=

# Base replication <address|hostname>[:port] of the node.
# The values supplied will be used as defaults for state transfer receiving,
# listening ports and so on. Default: address of the first network interface.
wsrep_node_address="<%= node['service_ip'] %>:4567"

# Address for incoming client connections. Autodetect by default.
wsrep_node_incoming_address="<%= node['service_ip'] %>:<%= node['bcpc']['mysql']['port'] %>"

# How many threads will process writesets from other nodes
wsrep_slave_threads=<%= node['bcpc']['mysql']['wsrep_slave_threads'] %>

# DBUG options for wsrep provider
#wsrep_dbug_option

# Generate fake primary keys for non-PK tables (required for multi-master
# and parallel applying operation)
wsrep_certify_nonPK=1

# Maximum number of rows in write set
# wsrep_max_ws_rows=0

# Maximum size of write set
# wsrep_max_ws_size=2147483648

# to enable debug level logging, set this to 1
wsrep_debug=0

# how many times to retry deadlocked autocommits
wsrep_retry_autocommit=3

# change auto_increment_increment and auto_increment_offset automatically
wsrep_auto_increment_control=1

# enable "strictly synchronous" semantics for read operations
wsrep_causal_reads=0

# Command to call when node status or cluster membership changes.
# Will be passed all or some of the following options:
# --status  - new status of this node
# --uuid    - UUID of the cluster
# --primary - whether the component is primary or not ("yes"/"no")
# --members - comma-separated list of members
# --index   - index of this node in the list
wsrep_notify_cmd=

##
## WSREP State Transfer options
##

# State Snapshot Transfer method
wsrep_sst_method=xtrabackup-v2

# Address on THIS node to receive SST at. DON'T SET IT TO DONOR ADDRESS!!!
# (SST method dependent. Defaults to the first IP of the first interface)
#wsrep_sst_receive_address="<%= node['service_ip'] %>:4567"

# Desired SST donor name.
#wsrep_sst_donor=

# Protocol version to use
# wsrep_protocol_version=

# Retain compatibility with PXC5.7 automation (for now)
pxc-encrypt-cluster-traffic=OFF
