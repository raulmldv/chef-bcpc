# for an overview of all the available configuration options for nova@ussuri
# go to: https://docs.openstack.org/nova/ussuri/configuration/config.html
#
[DEFAULT]
debug = false
allow_resize_to_same_host = <%= node['bcpc']['nova']['allow_resize_to_same_host'] %>
compute_monitors = cpu.virt_driver
vif_plugging_is_fatal = false
vif_plugging_timeout = 0
ssl_only = false
key = /etc/nova/ssl-bcpc.key
cert = /etc/nova/ssl-bcpc.pem
my_ip = <%= node['service_ip'] %>
enable_new_services = false
cpu_allocation_ratio = <%= node['bcpc']['nova']['cpu_allocation_ratio'] %>
<% if node['bcpc']['nova']['vcpu_pin_set'] %>
vcpu_pin_set =  <%= node['bcpc']['nova']['vcpu_pin_set'] %>
<% end %>
force_config_drive = true
ram_allocation_ratio = <%= node['bcpc']['nova']['ram_allocation_ratio'] %>
reserved_host_memory_mb = <%= node['bcpc']['nova']['reserved_host_memory_mb'] %>
resume_guests_state_on_host_boot = <%= node['bcpc']['nova']['resume_guests_state_on_host_boot'] %>
max_concurrent_builds = <%= node['bcpc']['nova']['max_concurrent_builds'] %>
sync_power_state_interval = <%= node['bcpc']['nova']['sync_power_state_interval'] %>
send_arp_for_ha = true
state_path = /var/lib/nova

transport_url = rabbit://<%= @rmqnodes.map{|n| "#{@config['rabbit']['username']}:#{@config['rabbit']['password']}@#{n['service_ip']}:5672" }.join(',') %>

<% if @is_headnode -%>
osapi_compute_link_prefix = <%= "https://#{node["bcpc"]['cloud']["fqdn"]}:8774" %>
enabled_apis = osapi_compute
osapi_compute_listen = <%= node['service_ip'] %>
<% if node['bcpc']['nova']['osapi_workers'] %>
osapi_compute_workers = <%= node['bcpc']['nova']['osapi_workers'] %>
<% else %>
osapi_compute_workers = <%= node['bcpc']['openstack']['services']['workers'] %>
<% end %>
<% else %>
enabled_apis = metadata
metadata_cache_expiration = <%= node['bcpc']['nova']['metadata']['cache_expiration'] %>
metadata_listen = <%= node['bcpc']['nova']['metadata']['listen'] %>
<% if node['bcpc']['nova']['metadata']['workers'] %>
metadata_workers = <%= node['bcpc']['nova']['metadata']['workers'] %>
<% else %>
metadata_workers = <%= node['bcpc']['openstack']['services']['workers'] %>
<% end %>
<% end %>

<% if not node['bcpc']['nova']['default_log_levels'].nil? %>
default_log_levels = "<%= node['bcpc']['nova']['default_log_levels'] %>"
<% end %>
dhcp_domain = <%= node['bcpc']['cloud']['domain'] %>

<% unless node['bcpc']['nova']['resize_confirm_window'].nil? %>
resize_confirm_window = <%= node['bcpc']['nova']['resize_confirm_window'] %>
<% end %>

[api]
auth_strategy = keystone

local_metadata_per_cell = true
<% if not node['bcpc']['nova']['vendordata']['name'].nil? %>
vendordata_dynamic_targets = <%= node['bcpc']['nova']['vendordata']['name'] %>@https://<%= @node['bcpc']['cloud']['fqdn'] %>:<%= node['bcpc']['nova']['vendordata']['port'] %>
vendordata_providers = DynamicJSON,StaticJSON
<% end -%>

[keystone_authtoken]
auth_uri = <%= "https://#{@node['bcpc']['cloud']['fqdn']}:5000/" %>
auth_url = <%= "https://#{@node['bcpc']['cloud']['fqdn']}:35357/" %>
memcached_servers = <%= @headnodes.map{ |n| "#{n['service_ip']}:11211" }.join(',') %>
auth_type = password
project_name = service
project_domain_name = Default
user_domain_name = Default
username = <%= @config['nova']['creds']['os']['username'] %>
password = <%= @config['nova']['creds']['os']['password'] %>

[api_database]
connection = <%= "mysql+pymysql://#{@db['username']}:#{@db['password']}@#{@db['host']}:#{@db['port']}/#{@db['dbname']}_api" %>
max_overflow=<%= node['bcpc']['nova']['db']['max_overflow'] %>
max_pool_size=<%= node['bcpc']['nova']['db']['max_pool_size'] %>

[database]
connection = <%= "mysql+pymysql://#{@db['username']}:#{@db['password']}@#{@db['host']}:#{@db['port']}/#{@db['dbname']}" %>
max_overflow = <%= node['bcpc']['nova']['db']['max_overflow'] %>
max_pool_size = <%= node['bcpc']['nova']['db']['max_pool_size'] %>

[placement]
os_region_name = <%= node['bcpc']['cloud']['region'] %>
auth_url = <%= "https://#{@node["bcpc"]['cloud']["fqdn"]}:35357/v3" %>
auth_type = password
project_domain_name = Default
project_name = service
user_domain_name = Default
username = <%= @config['placement']['creds']['os']['username'] %>
password = <%= @config['placement']['creds']['os']['password'] %>

[cinder]
os_region_name = <%= node['bcpc']['cloud']['region'] %>

[conductor]
<% unless node['bcpc']['openstack']['services']['workers'].nil? %>
workers = <%= node['bcpc']['openstack']['services']['workers'] %>
<% end%>

[glance]
api_servers = <%= "https://#{@vip}:9292" %>
insecure = true

[neutron]
url = <%= "https://#{node["bcpc"]['cloud']["fqdn"]}:9696" %>
auth_url = <%= "https://#{node["bcpc"]['cloud']["fqdn"]}:35357" %>
auth_type = password
region_name = <%= node['bcpc']['cloud']['region'] %>
project_name = service
project_domain_name = Default
user_domain_name = Default
username = <%= @config['neutron']['creds']['os']['username'] %>
password = <%= @config['neutron']['creds']['os']['password'] %>

[oslo_policy]
policy_dirs = policy.d

[oslo_concurrency]
lock_path = /var/lib/nova/tmp

[oslo_messaging_notifications]
driver = <%= node['bcpc']['nova']['notifications']['driver'] %>
topics = <%= node['bcpc']['nova']['notifications']['topics'] %>

[cache]
enabled = true
backend = oslo_cache.memcache_pool
backend_argument = memcached_expire_time:86400
<% if @is_headnode -%>
memcache_servers = <%= @headnodes.map{|n| "#{n['service_ip']}:11211" }.join(",") %>
<% else %>
memcache_servers = <%= "#{node['service_ip']}:11211" %>
<% end %>

[quota]
<% node['bcpc']['nova'].fetch('quota',{}).fetch('default',{}).each do |resource, limit| %>
<%= "#{resource} = #{limit}" %>
<% end %>
max_age = 28800
until_refresh = 10

[scheduler]
driver = filter_scheduler
<% unless node['bcpc']['openstack']['services']['workers'].nil? %>
workers = <%= node['bcpc']['openstack']['services']['workers'] %>
<% end%>

<% if @is_headnode -%>
[filter_scheduler]
<% @available_filters.each do |available_filter| %>
available_filters = <%= available_filter %>
<% end %>
enabled_filters = <%= @enabled_filters.join(',') %>

[vnc]
enabled = true
server_listen = <%= node['service_ip'] %>
server_proxyclient_address = <%= node['service_ip'] %>
novncproxy_host = <%= node['service_ip'] %>
<% else %>
[vnc]
enabled = true
vncserver_listen = 0.0.0.0
vncserver_proxyclient_address = <%= node['service_ip'] %>
novncproxy_base_url = <%= "https://#{node['bcpc']['cloud']['fqdn']}:6080/vnc_auto.html" %>
<% end %>

[notifications]
notification_format = <%= node['bcpc']['nova']['notifications']['format'] %>
notify_on_state_change = <%= node['bcpc']['nova']['notifications']['notify_on_state_change'] %>
<% if node['bcpc']['nova']['notifications']['format'] != 'unversioned' %>
# The default value for 'versioned_notifications_topics' is
# 'versioned_notifications'. However, we are changing it to
# 'watcher_notifications' as Watcher is the only consumer for these
# notifications at this time, and Watcher does not clean up the queue after
# consuming the messages as it uses 'pool' option from oslo_messaging.
versioned_notifications_topics = watcher_notifications
<% end %>
